"""
===============================
Cliente DASH (A ser desenvolvido pelos alunos)
===============================

Objetivo:
Implementar um cliente DASH que:

1. Baixe o manifesto do servidor
2. Liste as representa√ß√µes dispon√≠veis
3. Me√ßa a largura de banda atual da rede
4. Escolha a melhor qualidade de v√≠deo com base na largura de banda
5. Baixe o segmento de v√≠deo da qualidade escolhida
6. Mostre os dados coletados e salve o segmento localmente

üí° Dica: Utilize Wireshark para capturar os pacotes da execu√ß√£o e observar:
   - A requisi√ß√£o ao manifesto
   - O segmento de v√≠deo baixado
   - O tempo da transfer√™ncia para calcular a largura de banda

"""

# Exemplo de biblioteca √∫til:
# import requests
# import time

# URL do manifesto (use 127.0.0.1 em vez de localhost para evitar erros de permiss√£o)
MANIFEST_URL = "http://127.0.0.1:5000/manifest.mpd"

def baixar_manifesto():
    """
    Fun√ß√£o 1: Fazer uma requisi√ß√£o GET ao manifesto
    - Obter o JSON com as representa√ß√µes de v√≠deo
    - Retornar o dicion√°rio com as informa√ß√µes do manifesto
    """
    pass  # implementar

def medir_largura_de_banda(url_segmento_teste):
    """
    Fun√ß√£o 2: Medir a largura de banda
    - Baixar um segmento pequeno (ex: 360p)
    - Medir o tempo da transfer√™ncia
    - Calcular a largura de banda em Mbps: (tamanho_bytes * 8) / (tempo * 1_000_000)
    - Retornar a largura de banda medida
    """
    pass  # implementar

def selecionar_qualidade(manifesto, largura_banda_mbps):
    """
    Fun√ß√£o 3: Escolher a melhor representa√ß√£o
    - Percorrer as representa√ß√µes dispon√≠veis no manifesto
    - Comparar a largura de banda exigida por cada uma com a medida
    - Retornar a melhor representa√ß√£o suportada
    """
    pass  # implementar

def baixar_video(representacao):
    """
    Fun√ß√£o 4: Baixar o segmento de v√≠deo escolhido
    - Fazer uma requisi√ß√£o GET para a URL da representa√ß√£o escolhida
    - Salvar o conte√∫do em um arquivo local (ex: video_720p.mp4)
    """
    pass  # implementar

def main():
    """
     Fun√ß√£o principal:
    - Chamar as fun√ß√µes na ordem correta
    - Exibir os dados na tela
    - Salvar o v√≠deo com a qualidade selecionada
    """
    pass  # implementar

if __name__ == '__main__':
    main()
